name: 同步 mihomo 上游规则

on:
  workflow_dispatch:
  schedule:
    - cron: "0 */6 * * *"

jobs:
  Fork:
    runs-on: ubuntu-latest
    env:
      TZ: 'Asia/Shanghai'

    steps:
      - name: 检出目标仓库
        uses: actions/checkout@v4
        with:
          repository: thNylHx/Tools
          path: Tools-repo

      - name: 执行内嵌脚本
        run: |
          #!/bin/bash
          repo_name=$(basename "$GITHUB_REPOSITORY")
          if [[ "$repo_name" == "Tools" ]]; then
              echo "Running in Tools repository"
              mkdir -p Tools-repo/Ruleset/mihomo/{geoip,geosite}
              files=(
                  # geosite
                  "geosite/Ads_all.mrs https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/category-ads-all.mrs"
                  "geosite/Local.mrs https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/private.mrs"
                  "geosite/China.mrs https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/cn.mrs"
                  "geosite/Openai.mrs https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/openai.mrs"
                  "geosite/PayPal.mrs https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/paypal.mrs"
                  "geosite/Apple.mrs https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/apple.mrs"
                  "geosite/Global.mrs https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/geolocation-!cn.mrs"
                  "geosite/Google.mrs https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/google.mrs"
                  "geosite/YouTube.mrs https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/youtube.mrs"
                  "geosite/Steam.mrs https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/steam.mrs"
                  "geosite/Epic.mrs https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/epicgames.mrs"
                  "geosite/Facebook.mrs https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/facebook.mrs"
                  "geosite/Instagram.mrs https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/instagram.mrs"
                  "geosite/Twitter.mrs https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/twitter.mrs"
                  "geosite/telegram.mrs https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/telegram.mrs"
                  "geosite/Line.mrs https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/line.mrs"
                  "geosite/GitHub.mrs https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/github.mrs"
                  "geosite/OneDrive.mrs https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/onedrive.mrs"
                  "geosite/Microsoft.mrs https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/microsoft.mrs"
                  "geosite/tiktok.mrs https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/tiktok.mrs"
                  "geosite/Bilibili.mrs https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/bilibili.mrs"
                  "geosite/Disney.mrs https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/disney.mrs"
                  "geosite/Netflix.mrs https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/netflix.mrs"
                  "geosite/Spotify.mrs https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/spotify.mrs"

                  # geoip
                  "geoip/Local.mrs https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/private.mrs"
                  "geoip/China.mrs https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/cn.mrs"
                  "geoip/Netflix.mrs https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/netflix.mrs"
                  "geoip/Twitter.mrs https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/twitter.mrs"
                  "geoip/telegram.mrs https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/telegram.mrs"
                  "geoip/Facebook.mrs https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/facebook.mrs"
                  "geoip/Google.mrs https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/google.mrs"
              )
              for file in "${files[@]}"; do
                  file_name=$(echo $file | cut -d " " -f 1)
                  url=$(echo $file | cut -d " " -f 2)
                  # 确保 URL 格式正确
                  if [[ ! "$url" =~ ^https?: ]]; then
                      url="https:$url"
                  fi
                  echo "Downloading: $file_name"
                  curl -f -L "$url" -o "Tools-repo/Ruleset/mihomo/$file_name" || { echo "Download Failed: $url"; exit 1; }
              done
          else
              echo "This is not the Tools repository. Skipping."
          fi
        shell: bash

      - name: 推送到仓库
        run: |
          cd Tools-repo  # 切换到已检出的目标仓库目录
          # 检查当前 git 状态，判断是否存在文件更改（git status -s 有输出表示有更改）
          if [[ -n $(git status -s) ]]; then  # 如果存在未提交的更改，则执行提交操作
            echo "发现更新，准备提交..."  # 输出提示信息，表示检测到更新
            git config --local user.email "action@github.com"  # 配置本地 git 用户邮箱
            git config --local user.name "GitHub Action"  # 配置本地 git 用户名
            git add .  # 将所有更改添加到 git 暂存区
            # 提交更改，提交信息中包含当前上海时区的时间戳
            git commit -m "Auto Update $(TZ='Asia/Shanghai' date +'%Y-%m-%d %H:%M:%S')"  # 提交更新并标注提交时间
            git push origin HEAD  # 将本次提交推送到远程仓库当前分支
            echo "更新已推送到仓库"  # 输出提示信息，表示推送操作已完成
          else  # 若没有检测到任何更改
            echo "没有需要提交的更改"  # 输出提示信息，表示当前没有文件更改需要提交
          fi  # 结束 if 条件判断

      - name: 获取当前时间
        id: current_time
        run: |
          echo "time=$(date +'%Y-%m-%d %H:%M:%S')" >> $GITHUB_ENV

      - name: 发送 Telegram 通知
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            📢 通知
            🚀 来源：GitHub Actions
            ✉️ 标题：同步 mihomo 上游规则
            📦 仓库：JK567
            ⏰ 时间：${{ env.time }}
            🎉 状态：恭喜你！全部任务执行成功

      - name: 清理工作流
        uses: Mattraks/delete-workflow-runs@main
        with:
          retain_days: 0
          keep_minimum_runs: 5